package ir.composeopeqe.diimport android.app.Applicationimport androidx.room.Roomimport androidx.room.RoomDatabaseimport androidx.room.migration.Migrationimport androidx.sqlite.db.SupportSQLiteDatabaseimport dagger.Moduleimport dagger.Providesimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport ir.composeopeqe.data.db.DaoAppimport ir.composeopeqe.data.db.DatabaseAppimport ir.composeopeqe.service.ApiServiceimport retrofit2.Retrofitimport retrofit2.converter.gson.GsonConverterFactoryimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)object AppModules {    @Singleton    @Provides    fun db (application: Application) : DatabaseApp {        return Room.databaseBuilder(application , DatabaseApp::class.java , "db_MyApp")            .allowMainThreadQueries()            .build()    }    @Singleton    @Provides    fun getDao(dbApp: DatabaseApp) : DaoApp{        return dbApp.getDao()    }    @Singleton    @Provides    fun getServiceInterface(retrofit: Retrofit) : ApiService = retrofit.create(ApiService::class.java)    @Singleton    @Provides    fun getRetrofitInctance() : Retrofit{        return Retrofit.Builder()            .baseUrl("https://randomuser.me/")            .addConverterFactory(GsonConverterFactory.create())            .build()    }}