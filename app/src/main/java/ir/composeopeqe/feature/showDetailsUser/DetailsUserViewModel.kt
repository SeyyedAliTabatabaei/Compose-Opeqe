package ir.composeopeqe.feature.showDetailsUserimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableStateListOfimport androidx.compose.runtime.mutableStateOfimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport dagger.hilt.android.lifecycle.HiltViewModelimport ir.composeopeqe.data.Repositoryimport ir.composeopeqe.data.Resultimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.MutableStateFlowimport kotlinx.coroutines.flow.collectimport kotlinx.coroutines.flow.flowimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass DetailsUserViewModel @Inject constructor(private val repository: Repository) : ViewModel() {    fun userDetails(id : Long) : Flow<Result> = flow {        val ud = repository.getUser(id)        emit(ud)    }}